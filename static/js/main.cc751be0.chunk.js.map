{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","date","Date","this","setInterval","setState","console","log","toLocaleTimeString","oldName","clockName","newName","props","clearInterval","React","Component","App","isClockVisible","Math","round","random","showClock","hideClock","renameClock","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"8MAMaA,EAAb,4MACEC,aADF,IAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,aAAY,WACzB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OAG1BI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,wBAC3B,OAbP,gCAgBE,YAAmD,IAAnBC,EAAkB,EAA7BC,UACAC,EAAYR,KAAKS,MAA5BF,UAEJC,IAAYF,GAEdH,QAAQC,IAAR,qCAA0CE,EAA1C,eAAwDE,MArB9D,kCAyBE,WACMR,KAAKJ,SACPc,cAAcV,KAAKJ,WA3BzB,oBA+BE,WACE,OACE,8CAEG,IACAI,KAAKH,MAAMC,KAAKO,4BApCzB,GAA2BM,IAAMC,WCD3BC,G,kNACJhB,MAAQ,CACNiB,gBAAgB,EAChBP,UAAWQ,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,UAAY,WACV,EAAKhB,SAAS,CACZY,gBAAgB,K,EAIpBK,UAAY,WACV,EAAKjB,SAAS,CACZY,gBAAgB,K,EAIpBM,YAAc,WACZ,EAAKlB,SAAS,CACZK,UAAWQ,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,MAAsCjB,KAAKH,MAAnCU,EAAR,EAAQA,UAAWO,EAAnB,EAAmBA,eAEnB,OACE,sBAAKO,UAAU,MAAf,UACE,6CACCP,GAAkB,cAAC,EAAD,CAAOP,UAAWA,IAErC,wBAAQe,KAAK,SAASC,QAASvB,KAAKkB,UAAWM,SAAUV,EAAzD,wBAIA,wBAAQQ,KAAK,SAASC,QAASvB,KAAKmB,UAAWK,UAAWV,EAA1D,wBAIA,wBAAQQ,KAAK,SAASC,QAASvB,KAAKoB,YAApC,oC,GAxCUT,IAAMC,YAgDTC,IClDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cc751be0.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number\n};\n\nexport class Clock extends React.Component<Props> {\n  timerId: NodeJS.Timer | undefined;\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ clockName: oldName }: Props) {\n    const { clockName: newName } = this.props;\n\n    if (newName !== oldName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.round(Math.random() * 1000),\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  renameClock = () => {\n    this.setState({\n      clockName: Math.round(Math.random() * 1000),\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock clockName={clockName} />}\n\n        <button type=\"button\" onClick={this.showClock} disabled={isClockVisible}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock} disabled={!isClockVisible}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={this.renameClock}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}